import numpy as np

def convert_to_distance_vectors(position_data):
    # Convert the list of coordinates to a numpy array for easier calculations
    ned_coords = []
    for index, position in enumerate(position_data):
      if index >= len(position_data)-1:
        continue
    # Check that there is one more item
      elif index +1 >= len(position_data)-1:
        continue

      start = np.array(position)
      end = np.array(position_data[index+1])

      # Calculate the differences between consecutive coordinates
      difference = end - start
      ned_coords.append(difference.tolist())


    return ned_coords

# Example usage
position_data = [[0., 0., 0.], [0., 0., 0.], [-0.00100903, -0.0015942, 0.00235286],
                 [-0.00201643, -0.00318359, 0.00568672], [-0.00301597, -0.00475856, 0.01000151],
                 [-0.00399857, -0.00630839, 0.01529706], [-0.00495101, -0.00782016, 0.02157302],
                 [-0.00585809, -0.00928058, 0.02882877], [-0.00670144, -0.01067657, 0.03706343],
                 [-0.00746191, -0.01199501, 0.04627581], [-0.00812232, -0.01322619, 0.05640696],
                 [-0.00865868, -0.01435643, 0.06751259], [-0.00905817, -0.01538255, 0.07947646],
                 [-0.00930626, -0.01629648, 0.09228068], [-0.00937905, -0.01708141, 0.1060538],
                 [-0.00927143, -0.01773594, 0.12074527], [-0.00897501, -0.01825697, 0.13634361],
                 [-0.00847782, -0.0186367, 0.15290754], [-0.00779392, -0.01888813, 0.17026554],
                 [-0.00690577, -0.01900381, 0.18858917], [-0.00583581, -0.01900378, 0.20770605],
                 [-0.0045757, -0.01888776, 0.22779122], [-0.00313928, -0.01866971, 0.24884677],
                 [-0.00154352, -0.01836878, 0.27087513], [1.9106812e-04, -1.8008484e-02, 2.9387861e-01],
                 [0.00204316, -0.01761751, 0.31784937], [0.0039887, -0.01722806, 0.34279886],
                 [0.00599915, -0.01687495, 0.368728], [0.00804277, -0.0165946, 0.3956365],
                 [0.01008687, -0.01642604, 0.42349377], [0.01209749, -0.01640729, 0.4522556],
                 [0.01403581, -0.01658813, 0.4819869], [0.01587015, -0.01699456, 0.5125375],
                 [0.01755919, -0.01767227, 0.54393154], [0.01905657, -0.01867306, 0.5762209],
                 [0.02032948, -0.02002397, 0.60931903], [0.02134684, -0.02174689, 0.64313567],
                 [0.02203265, -0.02392647, 0.6778481], [0.02237048, -0.02655932, 0.7132804],
                 [0.02233821, -0.02965184, 0.74931926], [0.0219011, -0.033226, 0.7859151],
                 [0.02107502, -0.03724519, 0.82285005], [0.01978277, -0.0417757, 0.860224],
                 [0.01804652, -0.04677423, 0.89783746], [0.01574918, -0.05234253, 0.93586993]]

distance_vector = convert_to_distance_vectors(position_data)
print("Distance Vector (north_m, east_m, down_m):", distance_vector)
